{"version":3,"sources":["constants/actionsNames.js","redux/Tools/toolReducer.js","utils/createBaseFrame.js","utils/makeCopy.js","redux/FramesControl/framesControlReducer.js","redux/store.js","redux/rootReducer.js","constants/ToolNames.js","redux/Tools/toolActions.js","components/Tools/ToolsControl/ToolsButton/ToolButton.jsx","components/Tools/ToolsControl/index.jsx","utils/hexToRGB.js","components/Tools/ColorPicker/ColorButton/ColorButton.jsx","components/Tools/ColorPicker/index.jsx","components/Tools/KeyboardSettings/OpenKeyboardMenuButton/index.jsx","components/Tools/KeyboardSettings/KeyboardModalMenu/KeyboardSettingsButton/index.jsx","components/Tools/KeyboardSettings/KeyboardModalMenu/index.jsx","components/Tools/KeyboardSettings/index.jsx","components/Tools/index.jsx","utils/renderCanvas.js","utils/getCoordinates.js","utils/lineDraw.js","redux/FramesControl/framesControlActions.js","components/MainCanvas/index.jsx","utils/paintAllPixels.js","utils/bucketFunction.js","components/FramesPreview/PreviewArea/index.jsx","components/FramesPreview/PreviewSettings/index.jsx","components/FramesPreview/index.jsx","components/Header/Login/index.jsx","constants/GoogleKey.js","components/Header/Logout/index.jsx","components/Header/index.jsx","components/FramesControl/CopyButton/index.jsx","components/FramesControl/DeleteButton/index.jsx","components/FramesControl/Frame/index.jsx","components/FramesControl/AddFrameButton/index.jsx","components/FramesControl/index.jsx","components/LandingPage/index.jsx","components/Settings/CanvasSizeSettings/index.jsx","utils/createLink.js","components/Settings/ExportResultSettings/index.jsx","components/Settings/SettingsButton/index.jsx","components/Settings/index.jsx","components/index.jsx","index.jsx"],"names":["SWAP_COLORS","CREATE_FRAME","DELETE_FRAME","COPY_FRAME","REPLACE_FRAME","CHANGE_FRAME","CHANGE_CANVAS_SIZE","initialStore","mainColor","secondaryColor","activeToolId","buttonsConfiguration","toolReducer","store","action","type","payload","CreateBaseFrame","canvasSize","Array","from","makeCopy","frame","JSON","parse","stringify","activeFrameId","frames","createBaseFrame","pixelSize","framesControlReducer","cloneForDelete","splice","concat","cloneForCopy","framesCopy","startId","id1","targetId","id2","cloneFrames","newCanvasSize","delta","Math","abs","pixelDelta","framesLength","length","mainCanvasContainer","document","querySelector","style","backgroundSize","result","i","x","unshift","push","rootReducer","combineReducers","tools","framesControl","localStorage","getItem","createStore","composeWithDevTools","setActiveToolId","id","swapColors","ToolButton","icon","dispatch","useDispatch","useSelector","className","onClick","ToolsControl","Icons","faPen","faEraser","faFillDrip","faThumbtack","faFill","map","item","key","toolNames","hexToRgb","hex","replace","m","r","g","b","substring","match","parseInt","ColorButton","buttonClass","onChange","color","input","useRef","backgroundColor","join","current","click","value","ref","ColorPicker","hexToRGB","setMainColor","setSecondaryColor","faSyncAlt","OpenKeyboardMenuButton","toggleMenuStatus","faKeyboard","KeyboardSettingsButton","code","handleClick","activeKeyButton","e","KeyboardModalMenu","useState","setActiveKeyButton","keyboardSettingsWindow","useCallback","event","stopPropagation","onkeydown","letter","slice","toUpperCase","index","indexOf","index2","icons","faTimes","KeyboardSettings","isModalActive","setModalActive","Tools","useEffect","body","ToolNames","renderCanvas","canvas","clearCanvas","context","getContext","clearRect","width","height","forEach","row","cell","j","fillStyle","fillRect","getCoordinates","nativeEvent","floor","offsetX","y","offsetY","lineDraw","startX","startY","isMirror","clone","deltaX","deltaY","signX","signY","currX","currY","error","center","error2","createFrame","changeFrame","changeCanvasSize","MainCanvas","stroke","which","startCoords","onmousemove","startFrame","currCoords","onmouseup","paintAllPixelsToSameColor","paintAllPixels","bucket","colorRGBA","sCoords","startColor","undefined","stack","position","pop","bucketFunction","penOrEraser","coords","coordinates","currentCoords","onMouseDown","onContextMenu","preventDefault","PreviewArea","fpsInputValue","interval","setInterval","clearInterval","PreviewSettings","onInput","getInputValue","min","max","faCompress","FramesPreview","setFpsInputValue","previewArea","toggleFullScreen","fullscreenElement","exitFullscreen","requestFullscreen","Login","login","clientId","buttonText","onSuccess","cookiePolicy","render","renderProps","disabled","faGoogle","Logout","logout","userName","userImg","onLogoutSuccess","src","alt","Header","userImage","setUserImage","setUserName","response","profileObj","givenName","imageUrl","to","CopyButton","faCopy","DeleteButton","faTrash","Frame","active","animateFrames","handleCopyFrame","copyFrame","handleDeleteFrame","deleteFrame","changeActiveFrameId","role","draggable","AddFrameButton","faPlus","FramesControl","dropZone","ondragstart","target","getAttribute","ondragenter","parentElement","classList","contains","add","ondragleave","remove","ondragover","ondrop","LandingPage","props","toggleLandingPage","href","faGithubSquare","CanvasSizeSettings","createLink","data","name","format","link","createElement","setAttribute","ExportResultSetting","fps","setFps","gifBackgroundColor","setGifBackgroundColor","fileSize","setFileSize","fileName","setFileName","colorInput","nameInput","fpsInput","sizeInput","exportGif","a","async","encoder","GIFEncoder","currPixelSize","setDelay","start","addFrame","finish","buffer","out","getData","b64encoded","btoa","String","fromCharCode","apply","datajpg","step","SettingsButton","activeSettingButton","Settings","settings","setActiveSettingButton","openMenu","closeMenu","faCog","faSave","ExportResultSettings","App","window","onunload","jsonState","setItem","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8c5eb97c.chunk.js","sourcesContent":["// toolReducer\nexport const SET_ACTIVE_TOOL_ID = 'toolReducer/SET_ACTIVE_TOOL_ID';\nexport const SET_MAIN_COLOR = 'toolReducer/SET_MAIN_COLOR';\nexport const SET_SECONDARY_COLOR = 'toolReducer/SET_SECONDARY_COLOR';\nexport const SWAP_COLORS = 'toolReducer/SWAP_COLORS';\nexport const CHANGE_BUTTONS_CONFIG = 'toolReducer/CHANGE_BUTTONS_CONFIG';\n\n// framesControlReducer\nexport const CHANGE_ACTIVE_FRAME_ID = 'framesControlReducer/CHANGE_ACTIVE_FRAME_ID';\nexport const CREATE_FRAME = 'framesControlReducer/CREATE_FRAME';\nexport const DELETE_FRAME = 'framesControlReducer/DELETE_FRAME';\nexport const COPY_FRAME = 'framesControlReducer/COPY_FRAME';\nexport const REPLACE_FRAME = 'framesControlReducer/REPLACE_FRAME';\nexport const CHANGE_FRAME = 'mainCanvasReducer/CHANGE_FRAME';\n\n// settingsReducer\nexport const CHANGE_CANVAS_SIZE = 'framesControlReducer/CHANGE_CANVAS_SIZE';\n","import {\n  SET_ACTIVE_TOOL_ID, SET_MAIN_COLOR, SET_SECONDARY_COLOR, SWAP_COLORS, CHANGE_BUTTONS_CONFIG,\n} from '../../constants/actionsNames';\n\nconst initialStore = {\n  mainColor: [85, 85, 85],\n  secondaryColor: [0, 0, 0],\n  activeToolId: 'pen',\n  buttonsConfiguration: ['P', 'E', 'B', 'S', 'U'],\n};\n\nconst toolReducer = (store = initialStore, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_TOOL_ID:\n      return { ...store, activeToolId: action.payload };\n    case SET_MAIN_COLOR:\n      return { ...store, mainColor: action.payload };\n    case SET_SECONDARY_COLOR:\n      return { ...store, secondaryColor: action.payload };\n    case SWAP_COLORS:\n      return { ...store, secondaryColor: store.mainColor, mainColor: store.secondaryColor };\n    case CHANGE_BUTTONS_CONFIG:\n      return { ...store, buttonsConfiguration: action.payload };\n    default:\n      return store;\n  }\n};\n\nexport default toolReducer;\n","export default function CreateBaseFrame(canvasSize) {\n  return Array.from(Array(canvasSize), () => new Array(canvasSize));\n}\n","export default function makeCopy(frame) {\n  return JSON.parse(JSON.stringify(frame));\n}\n","import {\n  COPY_FRAME,\n  DELETE_FRAME,\n  CHANGE_ACTIVE_FRAME_ID,\n  REPLACE_FRAME,\n  CREATE_FRAME,\n  CHANGE_FRAME,\n  CHANGE_CANVAS_SIZE,\n} from '../../constants/actionsNames';\nimport createBaseFrame from '../../utils/createBaseFrame';\nimport makeCopy from '../../utils/makeCopy';\n\nconst initialStore = {\n  activeFrameId: 0,\n  canvasSize: 32,\n  frames: [createBaseFrame(32)],\n  pixelSize: 24,\n};\n\nconst framesControlReducer = (store = initialStore, action) => {\n  switch (action.type) {\n    case CHANGE_ACTIVE_FRAME_ID:\n      return { ...store, activeFrameId: action.payload };\n\n    case DELETE_FRAME:\n      const cloneForDelete = makeCopy(store.frames);\n      cloneForDelete.splice(action.payload, 1);\n      return { ...store, activeFrameId: 0, frames: cloneForDelete };\n\n    case CREATE_FRAME:\n      return { ...store, frames: store.frames.concat([createBaseFrame(32)]) };\n\n\n    case COPY_FRAME:\n      const cloneForCopy = makeCopy(store.frames[action.payload]);\n      store.frames.splice(action.payload, 0, cloneForCopy);\n\n      return { ...store, frames: makeCopy(store.frames) };\n\n\n    case REPLACE_FRAME:\n      const framesCopy = makeCopy(store.frames);\n      const startId = action.payload.id1;\n      const targetId = action.payload.id2;\n      [framesCopy[startId], framesCopy[targetId]] = [framesCopy[targetId], framesCopy[startId]];\n      return { ...store, frames: framesCopy };\n\n    case CHANGE_FRAME:\n      const cloneFrames = makeCopy(store.frames);\n      cloneFrames[store.activeFrameId] = action.payload;\n      return { ...store, frames: cloneFrames };\n\n    case CHANGE_CANVAS_SIZE:\n      const newCanvasSize = action.payload;\n\n      const { canvasSize, pixelSize, frames } = store;\n      if (newCanvasSize === canvasSize) return store;\n      const delta = Math.abs(newCanvasSize - canvasSize) / 2;\n      const pixelDelta = canvasSize / newCanvasSize;\n      const framesLength = frames.length;\n      const mainCanvasContainer = document.querySelector('.main-canvas-container');\n\n      mainCanvasContainer.style.backgroundSize = `${pixelSize * pixelDelta}px ${pixelSize * pixelDelta}px`;\n\n      const result = makeCopy(store.frames);\n\n      if (newCanvasSize > canvasSize) {\n        for (let i = 0; i < framesLength; i += 1) {\n          const frame = result[i];\n\n          for (let x = 0; x < canvasSize; x += 1) {\n            frame[x] = Array(delta).concat(frame[x]);\n            frame[x] = frame[x].concat(Array(delta));\n          }\n\n          for (let x = 0; x < delta; x += 1) {\n            frame.unshift(Array(delta * 2));\n            frame.push(Array(delta * 2));\n          }\n        }\n      }\n\n      if (newCanvasSize < canvasSize) {\n        for (let i = 0; i < framesLength; i += 1) {\n          const frame = result[i];\n          frame.splice(0, delta);\n          frame.splice(newCanvasSize, delta);\n\n          for (let x = 0; x < newCanvasSize; x += 1) {\n            frame[x].splice(0, delta);\n            frame[x].splice(newCanvasSize, delta);\n          }\n        }\n      }\n\n      return {\n        ...store, pixelSize: pixelSize * pixelDelta, frames: result, canvasSize: newCanvasSize,\n      };\n\n    default:\n      return store;\n  }\n};\n\nexport default framesControlReducer;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer';\n\n\nconst initialStore = JSON.parse(localStorage.getItem('state'));\n\nlet store;\n\nif (initialStore) store = createStore(rootReducer, initialStore, composeWithDevTools());\nif (!initialStore) store = createStore(rootReducer, composeWithDevTools());\n\n\nexport default store;\n","import { combineReducers } from 'redux';\nimport toolReducer from './Tools/toolReducer';\nimport framesControlReducer from './FramesControl/framesControlReducer';\n\nconst rootReducer = combineReducers({\n  tools: toolReducer,\n  framesControl: framesControlReducer,\n});\n\nexport default rootReducer;\n","export default [\n  'pen',\n  'eraser',\n  'paintBucket',\n  'stroke',\n  'paintAllPixels',\n];\n","import {\n  SET_ACTIVE_TOOL_ID, SET_MAIN_COLOR, SET_SECONDARY_COLOR, SWAP_COLORS, CHANGE_BUTTONS_CONFIG,\n} from '../../constants/actionsNames';\n\nexport const setActiveToolId = (id) => ({\n  type: SET_ACTIVE_TOOL_ID,\n  payload: id,\n});\n\nexport const setMainColor = (color) => ({\n  type: SET_MAIN_COLOR,\n  payload: color,\n});\n\nexport const setSecondaryColor = (color) => ({\n  type: SET_SECONDARY_COLOR,\n  payload: color,\n});\n\nexport const changeButtonsConfig = (newConfig) => ({\n  type: CHANGE_BUTTONS_CONFIG,\n  payload: newConfig,\n});\n\nexport const swapColors = { type: SWAP_COLORS };\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { setActiveToolId } from '../../../../redux/Tools/toolActions';\n\nexport default function ToolButton({ id, icon }) {\n  const dispatch = useDispatch();\n  const activeToolId = useSelector((store) => store.tools.activeToolId);\n\n  return (\n    <button\n      className={`${id === activeToolId ? 'active' : null} tool-button`}\n      onClick={() => dispatch(setActiveToolId(id))}\n      type=\"button\"\n    >\n      <FontAwesomeIcon icon={icon} />\n    </button>\n  );\n}\n","import React from 'react';\nimport {\n  faPen, faFillDrip, faEraser, faThumbtack, faFill,\n} from '@fortawesome/free-solid-svg-icons';\nimport key from 'weak-key';\nimport toolNames from '../../../constants/ToolNames';\nimport ToolButton from './ToolsButton/ToolButton';\n\nexport default function ToolsControl() {\n  const Icons = [faPen, faEraser, faFillDrip, faThumbtack, faFill];\n\n  return (\n    <div className=\"tools-controle\">\n      {\n        Icons.map((item, i) => (\n          <ToolButton\n            key={key(item)}\n            icon={item}\n            id={toolNames[i]}\n          />\n        ))\n      }\n    </div>\n  );\n}\n","export default function hexToRgb(hex) {\r\n  return hex\r\n    .replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, (m, r, g, b) => `#${r}${r}${g}${g}${b}${b}`)\r\n    .substring(1)\r\n    .match(/.{2}/g)\r\n    .map(x => parseInt(x, 16));\r\n}\r\n","import React, { useRef } from 'react';\n\nconst ColorButton = ({ buttonClass, onChange, color }) => {\n  const input = useRef(null);\n\n  return (\n    <button\n      className={buttonClass}\n      style={{ backgroundColor: `rgba(${color.join()})` }}\n      onClick={() => input.current.click()}\n      type=\"button\"\n    >\n      <input\n        type=\"color\"\n        onChange={() => onChange(input.current.value)}\n        ref={input}\n      />\n    </button>\n  );\n};\n\nexport default ColorButton;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\nimport hexToRGB from '../../../utils/hexToRGB';\nimport { swapColors, setMainColor, setSecondaryColor } from '../../../redux/Tools/toolActions';\nimport ColorButton from './ColorButton/ColorButton';\n\n\nexport default function ColorPicker() {\n  const dispatch = useDispatch();\n  const mainColor = useSelector((store) => store.tools.mainColor);\n  const secondaryColor = useSelector((store) => store.tools.secondaryColor);\n\n  const handleMainColorChange = (color) => {\n    dispatch(setMainColor(color));\n  };\n\n  const handleSecondaryColorChange = (color) => {\n    dispatch(setSecondaryColor(color));\n  };\n\n  return (\n    <div className=\"color-picker\">\n      <ColorButton\n        buttonClass=\"main color-button\"\n        id={0}\n        color={mainColor}\n        onChange={(value) => handleMainColorChange(hexToRGB(value))}\n      />\n\n      <ColorButton\n        buttonClass=\"secondary color-button\"\n        id={1}\n        color={secondaryColor}\n        onChange={(value) => handleSecondaryColorChange(hexToRGB(value))}\n      />\n\n      <button\n        onClick={() => dispatch(swapColors)}\n        className=\"swap-color-button\"\n        type=\"button\"\n      >\n        <FontAwesomeIcon icon={faSyncAlt} />\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faKeyboard } from '@fortawesome/free-regular-svg-icons';\n\n\nexport default function OpenKeyboardMenuButton({ toggleMenuStatus }) {\n  return (\n    <button\n      className=\"open-keyboard-menu-button\"\n      onClick={toggleMenuStatus}\n      type=\"button\"\n    >\n      <FontAwesomeIcon icon={faKeyboard} />\n    </button>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nexport default function KeyboardSettingsButton({\n  id,\n  code,\n  handleClick,\n  icon,\n  activeKeyButton,\n}) {\n  return (\n    <div\n      className=\"keyboard-settings-button\"\n    >\n      <FontAwesomeIcon icon={icon} />\n\n      <button\n        className={`${activeKeyButton === id ? 'active ' : ''}key-button`}\n        onClick={(e) => handleClick(id, e)}\n        type=\"button\"\n      >\n        {code}\n      </button>\n\n    </div>\n  );\n}\n","import React, {\n  useState, useCallback, useRef,\n} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen, faEraser, faFillDrip, faThumbtack, faFill, faTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport key from 'weak-key';\nimport { useSelector } from 'react-redux';\nimport { changeButtonsConfig } from '../../../../redux/Tools/toolActions';\nimport KeyboardSettingsButton from './KeyboardSettingsButton';\nimport toolNames from '../../../../constants/ToolNames';\n\n\nconst KeyboardModalMenu = ({ toggleMenuStatus }) => {\n  const buttonsConfiguration = useSelector((store) => store.tools.buttonsConfiguration);\n\n  const [activeKeyButton, setActiveKeyButton] = useState('');\n  const keyboardSettingsWindow = useRef();\n\n\n  const handleClick = useCallback((id, event) => {\n    event.stopPropagation();\n\n    keyboardSettingsWindow.current.onkeydown = (e) => {\n      e.stopPropagation();\n      const letter = e.code.slice(3, 5).toUpperCase();\n      const index = toolNames.indexOf(id);\n      const index2 = buttonsConfiguration.indexOf(letter);\n      if (index2 + 1) buttonsConfiguration[index2] = null;\n\n      buttonsConfiguration[index] = letter;\n      changeButtonsConfig(buttonsConfiguration);\n      setActiveKeyButton('');\n\n      keyboardSettingsWindow.current.onkeydown = null;\n    };\n\n    setActiveKeyButton(id);\n  }, [buttonsConfiguration]);\n\n\n  const icons = [faPen, faEraser, faFillDrip, faThumbtack, faFill];\n\n  return (\n    <div className=\"keyboard-settings-window\" ref={keyboardSettingsWindow}>\n      {icons.map((icon, i) => (\n        <KeyboardSettingsButton\n          code={buttonsConfiguration[i]}\n          handleClick={handleClick}\n          icon={icon}\n          key={key(icon)}\n          id={toolNames[i]}\n          activeKeyButton={activeKeyButton}\n        />\n      ))}\n\n      <button\n        className=\"exit-button\"\n        onClick={toggleMenuStatus}\n        type=\"button\"\n      >\n        <FontAwesomeIcon icon={faTimes} />\n      </button>\n    </div>\n  );\n};\n\n\nexport default KeyboardModalMenu;\n","import React, { useState, useCallback } from 'react';\nimport OpenKeyboardMenuButton from './OpenKeyboardMenuButton';\nimport KeyboardModalMenu from './KeyboardModalMenu';\n\n\nconst KeyboardSettings = () => {\n  const [isModalActive, setModalActive] = useState(false);\n\n\n  const toggleMenuStatus = useCallback(() => {\n    setModalActive(!isModalActive);\n  }, [setModalActive, isModalActive]);\n\n\n  return (\n    <div className=\"keyboard-settings\">\n      <OpenKeyboardMenuButton toggleMenuStatus={toggleMenuStatus} />\n      { isModalActive && <KeyboardModalMenu toggleMenuStatus={toggleMenuStatus} /> }\n    </div>\n  );\n};\n\nexport default KeyboardSettings;\n","import React, { useEffect } from 'react';\nimport ToolsControl from './ToolsControl';\nimport ColorPicker from './ColorPicker';\nimport KeyboardSettings from './KeyboardSettings';\nimport './index.scss';\nimport ToolNames from '../../constants/ToolNames';\nimport { setActiveToolId } from '../../redux/Tools/toolActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function Tools() {\n  const buttonsConfiguration = useSelector((store) => store.tools.buttonsConfiguration);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.body.onkeydown = (e) => {\n      const letter = e.code.slice(3, 5).toUpperCase();\n      const index = buttonsConfiguration.indexOf(letter);\n\n      if (!(index + 1)) return;\n      const id = ToolNames[index];\n      dispatch(setActiveToolId(id));\n    };\n  }, [buttonsConfiguration, dispatch]);\n\n  return (\n    <div className=\"tools\">\n      <ToolsControl />\n      <ColorPicker />\n      <KeyboardSettings />\n    </div>\n  );\n}\n","export default function renderCanvas(canvas, frame, pixelSize, clearCanvas = true) {\n  const context = canvas.getContext('2d');\n\n  if (clearCanvas) context.clearRect(0, 0, canvas.width, canvas.height);\n\n  frame.forEach((row, i) => {\n    row.forEach((cell, j) => {\n      if (!cell) return;\n      context.fillStyle = `rgb(${cell.join()})`;\n      context.fillRect(pixelSize * i, pixelSize * j, pixelSize, pixelSize);\n    });\n  });\n}\n","export default function getCoordinates(e, pixelSize) {\n  const event = e.nativeEvent ? e.nativeEvent : e;\n  const x = Math.floor(event.offsetX / pixelSize);\n  const y = Math.floor(event.offsetY / pixelSize);\n\n  return { x, y };\n}\n","import makeCopy from './makeCopy';\n\nexport default function lineDraw(frame, color, startX, startY, x, y, isMirror = false) {\n  const clone = makeCopy(frame);\n  const deltaX = Math.abs(startX - x);\n  const deltaY = Math.abs(startY - y);\n  const signX = x < startX ? 1 : -1;\n  const signY = y < startY ? 1 : -1;\n  let currX = x;\n  let currY = y;\n  let error = deltaX - deltaY;\n  const center = frame.length / 2;\n\n  do {\n    const error2 = error * 2;\n\n    clone[startX][startY] = color;\n    clone[currX][currY] = color;\n\n    if (isMirror) {\n      const delta = -(currX - center + 1);\n      clone[center + delta][currY] = color;\n    }\n\n    if (error * 2 > -deltaY) {\n      error -= deltaY;\n      currX += signX;\n    }\n\n    if (error2 < deltaX) {\n      error += deltaX;\n      currY += signY;\n    }\n  } while (currX !== startX || currY !== startY);\n\n  return clone;\n}\n","import {\n  COPY_FRAME, DELETE_FRAME, CHANGE_ACTIVE_FRAME_ID, REPLACE_FRAME, CREATE_FRAME, CHANGE_FRAME, CHANGE_CANVAS_SIZE,\n} from '../../constants/actionsNames';\n\nexport const createFrame = { type: CREATE_FRAME };\n\nexport const deleteFrame = (id) => ({\n  type: DELETE_FRAME,\n  payload: id,\n});\n\nexport const copyFrame = (id) => ({\n  type: COPY_FRAME,\n  payload: id,\n});\n\nexport const changeActiveFrameId = (id) => ({\n  type: CHANGE_ACTIVE_FRAME_ID,\n  payload: id,\n});\n\nexport const replaceFrame = (id1, id2) => ({\n  type: REPLACE_FRAME,\n  payload: { id1, id2 },\n});\n\nexport const changeFrame = (frame) => ({\n  type: CHANGE_FRAME,\n  payload: frame,\n});\n\nexport const changeCanvasSize = (newCanvasSize) => ({\n  type: CHANGE_CANVAS_SIZE,\n  payload: newCanvasSize,\n});\n","import React, { useRef, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport renderCanvas from '../../utils/renderCanvas';\nimport makeCopy from '../../utils/makeCopy';\nimport bucketFunction from '../../utils/bucketFunction';\nimport lineDraw from '../../utils/lineDraw';\nimport paintAllPixels from '../../utils/paintAllPixels';\nimport getCoordinates from '../../utils/getCoordinates';\nimport { changeFrame } from '../../redux/FramesControl/framesControlActions';\nimport './index.scss';\n\n\nconst MainCanvas = () => {\n  const canvas = useRef(null);\n  const dispatch = useDispatch();\n\n  const {\n    activeToolId,\n    frame,\n    pixelSize,\n    mainColor,\n    secondaryColor,\n  } = useSelector((store) => ({\n    activeToolId: store.tools.activeToolId,\n    frame: store.framesControl.frames[store.framesControl.activeFrameId],\n    pixelSize: store.framesControl.pixelSize,\n    mainColor: store.tools.mainColor,\n    secondaryColor: store.tools.secondaryColor,\n  }));\n\n  useEffect(() => {\n    renderCanvas(canvas.current, frame, pixelSize);\n  });\n\n\n  const chooseToolFunction = (e) => {\n    switch (activeToolId) {\n      case 'pen':\n      case 'eraser':\n        penOrEraser(e);\n        break;\n      case 'paintBucket':\n        bucket(e);\n        break;\n      case 'stroke':\n        stroke(e);\n        break;\n      case 'paintAllPixels':\n        paintAllPixelsToSameColor(e);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const stroke = useCallback((event) => {\n    const color = event.nativeEvent.which === 3 ? secondaryColor : mainColor;\n    const startCoords = getCoordinates(event, pixelSize);\n    let clone = makeCopy(frame);\n\n    lineDraw(clone, color, startCoords.x, startCoords.y, startCoords.x, startCoords.y);\n    renderCanvas(canvas.current, frame, pixelSize);\n\n    canvas.current.onmousemove = (e) => {\n      const startFrame = makeCopy(frame);\n      const currCoords = getCoordinates(e, pixelSize);\n\n      clone = lineDraw(startFrame, color, startCoords.x, startCoords.y, currCoords.x, currCoords.y);\n      renderCanvas(canvas.current, clone, pixelSize);\n    };\n\n    canvas.current.onmouseup = () => {\n      canvas.current.onmousemove = null;\n      canvas.current.onmouseup = null;\n      dispatch(changeFrame(clone));\n    };\n  }, [secondaryColor, mainColor, pixelSize, frame, dispatch]);\n\n\n  const paintAllPixelsToSameColor = useCallback((event) => {\n    const color = event.nativeEvent.which === 3 ? secondaryColor : mainColor;\n    const clone = paintAllPixels(frame, color);\n\n\n    dispatch(changeFrame(clone));\n  }, [secondaryColor, mainColor, frame, dispatch]);\n\n  const bucket = useCallback((e) => {\n    const colorRGBA = e.nativeEvent.which === 3 ? secondaryColor : mainColor;\n    const clone = bucketFunction(frame, colorRGBA, pixelSize, e.nativeEvent);\n\n    dispatch(changeFrame(clone));\n  }, [secondaryColor, mainColor, frame, pixelSize, dispatch]);\n\n\n  const penOrEraser = useCallback((event) => {\n    const coords = getCoordinates(event, pixelSize);\n    const coordinates = [coords.x, coords.y];\n    let color = event.nativeEvent.which === 3 ? secondaryColor : mainColor;\n    if (activeToolId === 'eraser') {\n      color = undefined;\n    }\n    let clone = lineDraw(frame, color, coords.x, coords.y, coords.x, coords.y);\n\n    renderCanvas(canvas.current, clone, pixelSize);\n\n    canvas.current.onmousemove = (e) => {\n      const currentCoords = getCoordinates(e, pixelSize);\n\n      coordinates.push(currentCoords.x, currentCoords.y);\n      if (coordinates.length > 4) coordinates.splice(0, 2);\n\n      clone = lineDraw(clone, color, ...coordinates);\n      renderCanvas(canvas.current, clone, pixelSize);\n    };\n\n    canvas.current.onmouseup = () => {\n      canvas.current.onmousemove = null;\n      canvas.current.onmouseup = null;\n      dispatch(changeFrame(clone));\n    };\n  }, [pixelSize, secondaryColor, mainColor, activeToolId, frame, dispatch]);\n\n\n  return (\n    <div className=\"main-canvas\">\n      <div className=\"main-canvas-container\">\n        <canvas\n          onMouseDown={chooseToolFunction}\n          onContextMenu={(e) => e.preventDefault()}\n          className=\"main-canvas\"\n          width=\"768\"\n          height=\"768\"\n          ref={canvas}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MainCanvas;\n","import makeCopy from './makeCopy';\n\nexport default function paintAllPixels(frame, color) {\n  const clone = makeCopy(frame);\n\n  clone.forEach((row, x) => {\n    row.forEach((cell, y) => {\n      clone[x][y] = color;\n    });\n  });\n\n  return clone;\n}\n","import makeCopy from './makeCopy';\nimport getCoordinates from './getCoordinates';\n\nexport default function bucketFunction(frame, color, pixelSize, e) {\n  const clone = makeCopy(frame);\n  const sCoords = getCoordinates(e, pixelSize);\n  const canvasSize = clone.length;\n  const startColor = clone[sCoords.x][sCoords.y] ? clone[sCoords.x][sCoords.y].join() : undefined;\n\n  if (startColor !== color.join()) {\n    const stack = [[sCoords.x, sCoords.y]];\n\n    while (stack.length) {\n      const position = stack.pop();\n      const x = position[0];\n      const y = position[1];\n\n      if ((x >= 0 && x < canvasSize) && (y >= 0 && y < canvasSize)) {\n        const correntColor = clone[x][y] ? clone[x][y].join() : undefined;\n\n        if (startColor === correntColor) {\n          clone[x][y] = color;\n          stack.push([x - 1, y], [x + 1, y], [x, y - 1], [x, y + 1]);\n        }\n      }\n    }\n  }\n\n  return clone;\n}\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport renderCanvas from '../../../utils/renderCanvas';\n\nconst PreviewArea = ({ fpsInputValue }) => {\n  const canvas = useRef(null);\n  const frames = useSelector((store) => store.framesControl.frames);\n  const pixelSize = useSelector((store) => store.framesControl.pixelSize);\n\n\n  useEffect(() => {\n    let x = 0;\n    const interval = setInterval(() => {\n      if (x >= frames.length) x = 0;\n      renderCanvas(canvas.current, frames[x], pixelSize / 2);\n      x++;\n    }, 1000 / fpsInputValue);\n    return () => clearInterval(interval);\n  }, [frames, fpsInputValue, pixelSize]);\n\n\n  return (\n    <canvas\n      className=\"preview-canvas\"\n      width={384}\n      height={384}\n      ref={canvas}\n    />\n  );\n};\n\nexport default PreviewArea;\n","import React, { useCallback, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompress } from '@fortawesome/free-solid-svg-icons';\n\n\nconst PreviewSettings = (\n  {\n    onInput,\n    onClick,\n    value,\n  },\n) => {\n  const input = useRef(null);\n\n  const getInputValue = useCallback(() => {\n    if (input) {\n      onInput(input.current.value);\n    }\n  }, [onInput]);\n\n  return (\n    <div className=\"preview-setings\">\n      <span className=\"fps-count\">\n        { value }\n        {' '}\n        FPS\n      </span>\n\n      <input\n        type=\"range\"\n        className=\"fps-input\"\n        value={value}\n        onChange={getInputValue}\n        min=\"1\"\n        max=\"24\"\n        ref={input}\n      />\n\n      <button\n        onClick={onClick}\n        className=\"full-screen-button\"\n        type=\"button\"\n      >\n        <FontAwesomeIcon icon={faCompress} />\n      </button>\n    </div>\n  );\n};\n\nexport default PreviewSettings;\n","import React, { useCallback, useRef, useState } from 'react';\nimport PreviewArea from './PreviewArea';\nimport PreviewSettings from './PreviewSettings';\nimport './index.scss';\n\nconst FramesPreview = () => {\n  const [fpsInputValue, setFpsInputValue] = useState(10);\n  const previewArea = useRef(null);\n\n\n  const toggleFullScreen = useCallback(() => {\n    if (!document.fullscreenElement) {\n      previewArea.current.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n  }, [previewArea]);\n\n  return (\n    <div className=\"preview-tools\">\n      <div className=\"frames-preview\" ref={previewArea}>\n        <PreviewArea fpsInputValue={fpsInputValue} />\n\n        <PreviewSettings\n          value={fpsInputValue}\n          onInput={setFpsInputValue}\n          onClick={toggleFullScreen}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FramesPreview;\n","import React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport GoogleKey from '../../../constants/GoogleKey';\n\n\nexport default function Login({ login }) {\n  return (\n    <GoogleLogin\n      clientId={GoogleKey}\n      buttonText=\"Login\"\n      onSuccess={login}\n      cookiePolicy=\"single_host_origin\"\n      render={(renderProps) => (\n        <button\n          className=\"login-button\"\n          onClick={renderProps.onClick}\n          disabled={renderProps.disabled}\n          type=\"button\"\n        >\n          <FontAwesomeIcon icon={faGoogle} />\n          {'  '}\n          Sign in\n        </button>\n      )}\n    />\n  );\n}\n","const GoogleKey = '508015143841-rtuaoqal57mbq4f79oh6u281lh9ub9fs.apps.googleusercontent.com';\n\nexport default GoogleKey;\n","import React from 'react';\nimport { GoogleLogout } from 'react-google-login';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\n\nexport default function Logout({ logout, userName, userImg }) {\n  return (\n    <div className=\"logout-container\">\n      <div className=\"logout-button-container\">\n        <span>\n          Привет,\n          {' '}\n          {userName}\n        </span>\n\n        <GoogleLogout\n          buttonText=\"Logout\"\n          onLogoutSuccess={logout}\n          render={(renderProps) => (\n            <button\n              className=\"logout-button\"\n              onClick={renderProps.onClick}\n              disabled={renderProps.disabled}\n              type=\"button\"\n            >\n              <FontAwesomeIcon icon={faGoogle} />\n              {'  '}\n              Sign out\n            </button>\n          )}\n        />\n      </div>\n\n      <img src={userImg} alt={userName} width=\"50\" height=\"50\" />\n    </div>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Login from './Login';\nimport Logout from './Logout';\nimport './index.scss';\n\nconst Header = () => {\n  const [userImage, setUserImage] = useState(null);\n  const [userName, setUserName] = useState(null);\n\n  const login = useCallback((response) => {\n    const { givenName, imageUrl } = response.profileObj;\n    setUserImage(imageUrl);\n    setUserName(givenName);\n  }, []);\n\n  const logout = useCallback(() => {\n    setUserName(null);\n    setUserImage(null);\n  }, [setUserName, setUserImage]);\n\n\n  return (\n    <div className=\"app-header\">\n      <Link to=\"/\">\n        <button\n          className=\"piskel-button\"\n          type=\"button\"\n        >\n          <h1>Piskel</h1>\n        </button>\n      </Link>\n\n      <div className=\"header-buttons-container\">\n        {!userName && <Login login={login} />}\n        {userName && <Logout userName={userName} userImg={userImage} logout={logout} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\n\nconst CopyButton = ({ onClick }) => (\n  <button\n    className=\"frame-copy\"\n    onClick={onClick}\n    type=\"button\"\n  >\n    <FontAwesomeIcon icon={faCopy} />\n  </button>\n);\n\nexport default CopyButton;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nconst DeleteButton = ({ onClick }) => (\n  <button\n    className=\"frame-delete\"\n    onClick={onClick}\n    type=\"button\"\n  >\n    <FontAwesomeIcon icon={faTrash} />\n  </button>\n);\n\nexport default DeleteButton;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CopyButton from '../CopyButton';\nimport DeleteButton from '../DeleteButton';\nimport renderCanvas from '../../../utils/renderCanvas';\nimport { deleteFrame, copyFrame, changeActiveFrameId } from '../../../redux/FramesControl/framesControlActions';\n\n\nconst Frame = ({ id, frames, active }) => {\n  const canvas = useRef(null);\n  const dispatch = useDispatch();\n  const pixelSize = useSelector((store) => store.framesControl.pixelSize);\n\n  const animateFrames = useCallback(() => {\n    const frame = frames[id];\n    renderCanvas(canvas.current, frame, pixelSize / 4);\n  }, [id, frames, pixelSize, canvas]);\n\n  useEffect(() => {\n    animateFrames();\n  });\n\n  const handleCopyFrame = useCallback((id, e) => {\n    e.stopPropagation();\n    dispatch(copyFrame(id));\n  }, [dispatch]);\n\n  const handleDeleteFrame = useCallback((id, e) => {\n    e.stopPropagation();\n    dispatch(deleteFrame(id));\n  }, [dispatch]);\n\n\n  return (\n    <div\n      className={`${active ? 'active' : null} frame`}\n      onClick={() => dispatch(changeActiveFrameId(id))}\n      role=\"presentation\"\n      draggable=\"true\"\n      id={id}\n    >\n      <canvas\n        width=\"192\"\n        height=\"192\"\n        id={id}\n        ref={canvas}\n      />\n\n      <div className=\"frame-count\">{id + 1}</div>\n\n      {frames.length > 1 && <DeleteButton onClick={(e) => handleDeleteFrame(id, e)} />}\n\n      <CopyButton onClick={(e) => handleCopyFrame(id, e)} />\n\n    </div>\n  );\n};\n\nexport default Frame;\n","import React from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst AddFrameButton = ({ onClick }) => (\n  <button\n    className=\"add-frame-button\"\n    onClick={onClick}\n    type=\"button\"\n  >\n    <FontAwesomeIcon icon={faPlus} />\n      Add frame\n  </button>\n);\n\nexport default AddFrameButton;\n","import React, { useEffect, useRef } from 'react';\nimport key from 'weak-key';\nimport Frame from './Frame';\nimport AddFrameButton from './AddFrameButton';\nimport { replaceFrame, createFrame } from '../../redux/FramesControl/framesControlActions';\nimport './index.scss';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst FramesControl = () => {\n  const dropZone = useRef(null);\n  const dispatch = useDispatch();\n  const frames = useSelector((store) => store.framesControl.frames);\n  const activeFrameId = useSelector((store) => store.framesControl.activeFrameId);\n\n\n  useEffect(() => {\n    let startId;\n\n    dropZone.current.ondragstart = (event) => {\n      startId = event.target.getAttribute('id');\n    };\n\n    dropZone.current.ondragenter = (event) => {\n      if (event.target.parentElement.classList.contains('frame')) {\n        event.target.parentElement.classList.add('drag-hovered');\n      }\n    };\n\n    dropZone.current.ondragleave = (event) => {\n      if (event.target.parentElement.classList.contains('frame')) {\n        event.target.parentElement.classList.remove('drag-hovered');\n      }\n    };\n\n    dropZone.current.ondragover = (e) => e.preventDefault();\n\n    dropZone.current.ondrop = (event) => {\n      const targetId = event.target.getAttribute('id');\n\n      event.preventDefault();\n      event.target.parentElement.classList.remove('drag-hovered');\n      if (startId === targetId) return;\n      dispatch(replaceFrame(startId, targetId));\n    };\n  }, [dispatch]);\n\n  return (\n    <div\n      className=\"frames-control\"\n      ref={dropZone}\n    >\n      {frames.map((frame, i) => (\n        <Frame\n          key={key(frame)}\n          id={i}\n          frames={frames}\n          active={activeFrameId === i}\n        />\n      ))}\n\n      <AddFrameButton\n        onClick={() => dispatch(createFrame)}\n      />\n    </div>\n  );\n};\n\nexport default FramesControl;\n","import React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport {\n  faPen, faFillDrip, faEraser, faThumbtack, faFill,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faGithubSquare } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nexport default function LandingPage(props) {\n  const { toggleLandingPage } = props;\n  return (\n    <div className=\"landing-page\">\n      <div className=\"screenshot-container\">\n        <div className=\"information-container\">\n          <h2>Piskel is a free online editor for animated sprites & pixel art</h2>\n          <p>\n            Create animations in your browser.\n            Try an example, use Google sign in to access your gallery or simply create a new sprite.\n          </p>\n          <div className=\"information-button-container\">\n            <Link to=\"/create-sprite\">\n              <button\n                className=\"information-container-button\"\n                onClick={toggleLandingPage}\n                type=\"button\"\n              >\n                Create sprite\n              </button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"main-screen-shoot\">\n          <div className=\"main-gif\" />\n        </div>\n      </div>\n\n      <div className=\"tools-explanation-container\">\n        <div className=\"tool-explonation\">\n          <FontAwesomeIcon icon={faPen} />\n          <span>Regular pen</span>\n        </div>\n\n        <div className=\"tool-explonation\">\n          <FontAwesomeIcon icon={faEraser} />\n          <span>Eraser</span>\n        </div>\n\n        <div className=\"tool-explonation\">\n          <FontAwesomeIcon icon={faFillDrip} />\n          <span>Paint bucket</span>\n        </div>\n\n        <div className=\"tool-explonation\">\n          <FontAwesomeIcon icon={faThumbtack} />\n          <span>Stroke line</span>\n        </div>\n\n        <div className=\"tool-explonation\">\n          <FontAwesomeIcon icon={faFill} />\n          <span>Paint all pixels</span>\n        </div>\n      </div>\n\n      <div className=\"author-information\">\n        <span>Created by </span>\n        <a href=\"https://github.com/AgentRa\" className=\"author-link\">\n          Alexander Razhachkin\n          {' '}\n          <FontAwesomeIcon icon={faGithubSquare} />\n        </a>\n      </div>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeCanvasSize } from '../../../redux/FramesControl/framesControlActions';\n\nexport default function CanvasSizeSettings() {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"settings-area\">\n      <button\n        className=\"settings-button\"\n        onClick={() => dispatch(changeCanvasSize(32))}\n        type=\"button\"\n      >\n        32x32\n      </button>\n\n      <button\n        className=\"settings-button\"\n        onClick={() => dispatch(changeCanvasSize(64))}\n        type=\"button\"\n      >\n        64x64\n      </button>\n\n      <button\n        className=\"settings-button\"\n        onClick={() => dispatch(changeCanvasSize(128))}\n        type=\"button\"\n      >\n        128x128\n      </button>\n    </div>\n  );\n}\n","export default function createLink(data, name, format) {\n  const link = document.createElement('a');\n  link.setAttribute('href', data);\n  link.setAttribute('download', `${name}.${format}`);\n\n  return link;\n}\n","import React, { useCallback, useRef, useState } from 'react';\nimport GIFEncoder from 'gif-encoder-2';\nimport { useSelector } from 'react-redux';\nimport renderCanvas from '../../../utils/renderCanvas';\nimport createLink from '../../../utils/createLink';\n\n\nconst ExportResultSetting = () => {\n  const pixelSize = useSelector((store) => store.framesControl.pixelSize);\n  const frames = useSelector((store) => store.framesControl.frames);\n  const [fps, setFps] = useState(12);\n  const [gifBackgroundColor, setGifBackgroundColor] = useState('#969696');\n  const [fileSize, setFileSize] = useState(64);\n  const [fileName, setFileName] = useState('piskel-clone');\n  const colorInput = useRef(null);\n  const nameInput = useRef(null);\n  const fpsInput = useRef(null);\n  const sizeInput = useRef(null);\n\n  const exportGif = useCallback(async () => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const encoder = new GIFEncoder(fileSize, fileSize);\n    const standardCanvasSize = 768;\n    const currPixelSize = (fileSize / standardCanvasSize) * pixelSize;\n\n    canvas.width = fileSize;\n    canvas.height = fileSize;\n    encoder.setDelay(1000 / fps);\n    encoder.start();\n\n    for (let i = 0; i < frames.length; i += 1) {\n      context.fillStyle = gifBackgroundColor;\n      context.fillRect(0, 0, fileSize, fileSize);\n      renderCanvas(canvas, frames[i], currPixelSize, false);\n      encoder.addFrame(context);\n      context.clearRect(0, 0, fileSize, fileSize);\n    }\n\n    encoder.finish();\n\n    const buffer = encoder.out.getData();\n    const b64encoded = btoa(String.fromCharCode.apply(null, buffer));\n    const datajpg = `data:image/jpg;base64,${b64encoded}`;\n    const link = createLink(datajpg, fileName, 'gif');\n\n    link.click();\n  }, [frames, pixelSize, fileName, fileSize, fps, gifBackgroundColor]);\n\n\n  return (\n    <div className=\"settings-area\">\n      <span>\n          Export\n        {' '}\n          .gif\n      </span>\n\n      <div className=\"export-field\">\n        File name:\n        <input\n          className=\"nameInput\"\n          type=\"text\"\n          value={fileName}\n          onChange={(e) => setFileName(e.target.value)}\n          ref={nameInput}\n        />\n      </div>\n\n      <div className=\"export-field\">\n        Gif background color:\n        <button\n          className=\"color-button\"\n          style={{ backgroundColor: gifBackgroundColor }}\n          onClick={() => colorInput.current.click()}\n          type=\"button\"\n        >\n          <input\n            className=\"color-input\"\n            type=\"color\"\n            onChange={(e) => setGifBackgroundColor(e.target.value)}\n            ref={colorInput}\n            value={gifBackgroundColor}\n          />\n        </button>\n      </div>\n\n      <div className=\"export-field\">\n        <span>\n              FPS rate:\n          {' '}\n          {fps}\n        </span>\n\n        <input\n          type=\"range\"\n          className=\"range-input\"\n          onChange={(e) => setFps(e.target.value)}\n          value={fps}\n          min=\"0\"\n          max=\"24\"\n          ref={fpsInput}\n        />\n      </div>\n\n      <div className=\"export-field\">\n        <span>\n              File dimensions:\n          {' '}\n          {fileSize}\n          {' '}\n              px\n        </span>\n\n        <input\n          type=\"range\"\n          className=\"range-input\"\n          onChange={(e) => setFileSize(e.target.value)}\n          value={fileSize}\n          min=\"64\"\n          max=\"768\"\n          step=\"32\"\n          ref={sizeInput}\n        />\n      </div>\n\n      <button\n        className=\"export-button\"\n        type=\"button\"\n        onClick={exportGif}\n      >\n        Export .gif\n      </button>\n    </div>\n  );\n};\n\nexport default ExportResultSetting;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function SettingsButton({\n  icon,\n  onClick,\n  id,\n  activeSettingButton,\n}) {\n  return (\n    <button\n      className={`${activeSettingButton === id ? 'active ' : ''}settings-button`}\n      onClick={(e) => onClick(id, e)}\n      type=\"button\"\n    >\n      <FontAwesomeIcon icon={icon} />\n    </button>\n  );\n}\n","import React, { useCallback, useRef, useState } from 'react';\nimport './index.scss';\nimport { faCog, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport key from 'weak-key';\nimport CanvasSizeSettings from './CanvasSizeSettings';\nimport ExportResultSettings from './ExportResultSettings';\nimport SettingsButton from './SettingsButton';\n\n\nconst Settings = () => {\n  const settings = useRef(null);\n  const [activeSettingButton, setActiveSettingButton] = useState(0);\n\n  const openMenu = useCallback((id, e) => {\n    e.stopPropagation();\n    settings.current.classList.add('activeMenu');\n\n    setActiveSettingButton(id);\n  }, []);\n\n  const closeMenu = useCallback(() => {\n    settings.current.classList.remove('activeMenu');\n  }, []);\n\n  const icons = [faCog, faSave];\n\n  return (\n    <div\n      className=\"settings\"\n      ref={settings}\n    >\n      <div className=\"buttons-container\">\n        {icons.map((item, i) => (\n          <SettingsButton\n            icon={item}\n            activeSettingButton={activeSettingButton}\n            id={i}\n            key={key(item)}\n            onClick={openMenu}\n          />\n        ))}\n      </div>\n\n      {activeSettingButton === 0 && <CanvasSizeSettings />}\n      {activeSettingButton === 1 && <ExportResultSettings />}\n\n\n      <button\n        className=\"exit-menu-button\"\n        onClick={closeMenu}\n        type=\"button\"\n      >\n        <FontAwesomeIcon icon={faTimes} />\n      </button>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Tools from './Tools';\nimport MainCanvas from './MainCanvas';\nimport FramesPreview from './FramesPreview';\nimport Header from './Header';\nimport FramesControl from './FramesControl';\nimport LandingPage from './LandingPage';\nimport Settings from './Settings';\nimport './index.scss';\n\nfunction App() {\n  const store = useSelector((store) => store);\n\n  useEffect(() => {\n    window.onunload = () => {\n      const jsonState = JSON.stringify(store);\n      localStorage.setItem('state', jsonState);\n    };\n  });\n\n  return (\n\n    <Router>\n      <Switch>\n        <Route path=\"/create-sprite\">\n          <>\n            <Header />\n            <div className=\"app-main\">\n              <Tools />\n              <FramesControl />\n              <MainCanvas />\n              <FramesPreview />\n              <Settings />\n            </div>\n          </>\n        </Route>\n        <Route path=\"/\">\n          <Header />\n          <LandingPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport './index.scss';\nimport App from './components';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}